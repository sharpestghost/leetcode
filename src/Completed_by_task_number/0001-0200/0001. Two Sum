//Time complexity: O(n) (for cycle), space complexity: O(n) (HashMap).
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap();
        for (int i = 0; i < nums.length; i++) {
            int l = target - nums[i];
            if (map.containsKey(l)) return new int[] {map.get(l), i};
            map.put(nums[i], i);
        }
        return new int[] {};
    }
}