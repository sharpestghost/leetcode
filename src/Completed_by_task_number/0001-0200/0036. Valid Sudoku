class Solution {
    public boolean isValidSudoku(char[][] board) {
        boolean[] isExists;
        for (char[] row: board) {
            isExists = new boolean[9];
            for (char num: row) {
                if (num == '.') continue;
                if (isExists[num - '1'])
                return false;
                else isExists[num - '1'] = true;
            }
        }
        for (int i = 0; i < board.length; i++) {
            isExists = new boolean[9];
            for (int j = 0; j < board.length; j++) {
                char cell = board[j][i];
                if (cell == '.') continue;
                if (isExists[cell - '1'])
                return false;
                else isExists[cell - '1'] = true;
            }
        }

        for (int i = 0; i < board.length; i++) {
            isExists = new boolean[9];
            for (int j = 0; j < board.length ; j++) {
                char cell = board[i / 3 * 3 + j / 3][(i % 3) * 3 + j % 3];
                if (cell == '.') continue;
                if (isExists[cell- '1'])
                return false;
                else isExists[cell - '1'] = true;
            }
        }
        return true;
    }
}